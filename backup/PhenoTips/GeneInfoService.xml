<?xml version='1.0' encoding='UTF-8'?>
<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>GeneInfoService</name>
  <language />
  <defaultLanguage />
  <translation>0</translation>
  <creator>XWiki.sdumitriu</creator>
  <creationDate>1411434792000</creationDate>
  <parent>PhenoTips.GeneNameService</parent>
  <author>XWiki.sdumitriu</author>
  <contentAuthor>XWiki.sdumitriu</contentAuthor>
  <date>1409335414000</date>
  <contentUpdateDate>1409335414000</contentUpdateDate>
  <version>1.1</version>
  <title />
  <comment>Install extensoin [org.phenotips:ontology-hgnc-access-ui-1.0-rc-1]</comment>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}
#if ($xcontext.action != 'get')
  **Usage**: //http[s]:~/~/&lt;hostname>[:&lt;port>]/&lt;appname>/bin/get/PhenoTips/GeneInfoService?id=&lt;HGNC approved gene symbol>//
  Example: [[http://playground.phenotips.org/bin/get/PhenoTips/GeneInfoService?id=BRCA1]]
  #break
#end
#if ("$!{request.outputSyntax}" == 'plain')
  {{content syntax="plain/1.0"}}
#else
  {{html wiki="false" clean="false"}}
#end
#if ("$!request.id" != '')
  #set ($term = $services.ontologies.hgnc.getTerm($request.id))
#else
  $response.setStatus(400)##
  $response.setContentType('application/json')##
  $jsontool.serialize({"error" : "Gene symbol not provided."})
  #break
#end
#if (!$term)
  $response.setStatus(404)##
  $response.setContentType('application/json')##
  $jsontool.serialize({"error" : "Gene not found."})
  #break
#end

#set ($result = {
  'symbol' : $term.symbol,
  'name' : $term.name,
  'external_ids' : {'genecards_id' :  $term.symbol}
})
#if ($term.alias_symbol)
  #set ($result.alias_symbol = $term.alias_symbol)
#end
#if ($term.gene_family)
  #set ($result.gene_family = $term.gene_family)
#end
#foreach ($externalTerm in ['omim_id', 'entrez_id', 'refseq_accession', 'ensembl_gene_id'])
  #if ($term.get($externalTerm))
    #set ($discard = $result.external_ids.put($externalTerm, $term.get($externalTerm)))
  #end
#end
$response.setContentType('application/json')
$jsontool.serialize($result)
#if ("$!{request.outputSyntax}" == 'plain')
  {{/content}}
#else
  {{/html}}
#end
{{/velocity}}</content>
</xwikidoc>