<?xml version='1.0' encoding='UTF-8'?>
<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>SuggestPatientsService</name>
  <language />
  <defaultLanguage />
  <translation>0</translation>
  <creator>XWiki.Admin</creator>
  <creationDate>1380351544000</creationDate>
  <parent>XWiki.SearchCode</parent>
  <author>XWiki.sdumitriu</author>
  <contentAuthor>XWiki.sdumitriu</contentAuthor>
  <date>1411434819000</date>
  <contentUpdateDate>1411434819000</contentUpdateDate>
  <version>3.1</version>
  <title>Lucene Suggestion Service</title>
  <comment>Install extensoin [org.phenotips:phenotips-ui-1.0-rc-1]</comment>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
## ------------------------
## URL parameters retrieval
## ------------------------
#set ($input = "$!request.input.toLowerCase()")
#set ($nb = "$!request.nb")
#if ($nb != '')
  #set ($nb = $mathtool.toInteger($nb) + 1)
#else
  #set ($nb = 6)
#end
## -----------------------------------
## Query execution, results formatting
## -----------------------------------
#if ($input != '')
  #set ($query = 'from doc.object(PhenoTips.PatientClass) as patient where lower(doc.name) like :input or lower(patient.external_id) like :input')
  #if ($services.recordConfiguration.activeConfiguration.enabledFieldNames.contains('first_name'))
    #set ($query = $query.concat(' or lower(patient.first_name) like :input or lower(patient.last_name) like :input'))
  #end
  #set ($query = $services.query.xwql($query))
  #set ($discard = $query.setLimit($nb))
  #set ($discard = $query.bindValue('input', "%${input}%"))
  #set ($discard = $response.setContentType("text/xml"))
  &lt;?xml version="1.0" encoding="UTF-8"?>
  #set ($results = $query.execute())
  &lt;results>
    #foreach ($item in $results)
      #if ($xwiki.hasAccessLevel('view', $xcontext.user, $item))
        #set ($itemdoc = $xwiki.getDocument($item))
        #set ($name = $itemdoc.getPlainTitle())
        #set ($externalId = "$!itemdoc.getObject('PhenoTips.PatientClass').getProperty('external_id').value")
        #if ($externalId != '')
          #set ($name = "${externalId} (${name})")
        #end
        #set ($url = $itemdoc.getURL())
        &lt;rs id="$url" info="${escapetool.xml($itemdoc.documentReference)}">$escapetool.xml($name)&lt;/rs>
      #end
    #end
  &lt;/results>
#else
{{info}}
This service allows to retrieve search results for the suggest UI component.
Examples:
* [[$doc.getExternalURL('get', 'outputSyntax=plain&amp;query=__INPUT__*&amp;input=test')]]
{{/info}}
#end
{{/velocity}}
</content>
</xwikidoc>