<?xml version='1.0' encoding='UTF-8'?>
<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>OmimPredictService</name>
  <language />
  <defaultLanguage />
  <translation>0</translation>
  <creator>XWiki.Admin</creator>
  <creationDate>1338173845000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>XWiki.sdumitriu</author>
  <contentAuthor>XWiki.sdumitriu</contentAuthor>
  <date>1411434795000</date>
  <contentUpdateDate>1411434795000</contentUpdateDate>
  <version>6.1</version>
  <title />
  <comment>Install extensoin [org.phenotips:solr-access-service-ui-1.0-rc-1]</comment>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity filter="indent"}}
#if ($xcontext.action == 'get')
  $response.setHeader("X-ReqNo", "$!request.reqNo")##
  #if ("$!request.q" != '')##
    #set ($_service = $services.omim)
    #set ($limit = $mathtool.toInteger("$!{request.limit}"))
    #if (!$limit || $limit &lt; 0)
      #set ($limit = 20)
    #end
#set ($limit = 50)
    #set ($data = [])
    #set ($ancestors = $collectionstool.set)
    #set ($negativeAncestors = $collectionstool.set)
    #foreach ($piece in $!request.getParameterValues('symptom'))
      #set ($discard = $data.add("symptom:${piece.replaceAll(':', '\\:')}"))
      #set ($discard = $ancestors.addAll($services.ontologies.resolveTerm($piece).get('term_category')))
    #end
    #foreach ($piece in $!request.getParameterValues('not_symptom'))
      #set ($discard = $data.add("not_symptom:${piece.replaceAll(':', '\\:')}"))
      #set ($discard = $negativeAncestors.addAll($services.ontologies.resolveTerm($piece).get('term_category')))
    #end
    #set ($discard = $negativeAncestors.removeAll($ancestors))
    #if ($!request.getParameterValues('not_symptom'))
      #set ($discard = $negativeAncestors.removeAll($!request.getParameterValues('not_symptom')))
    #end
    #if ($!request.getParameterValues('symptom'))
      #set ($discard = $ancestors.removeAll($!request.getParameterValues('symptom')))
    #end
    #foreach ($piece in $ancestors)
      #set ($discard = $data.add("symptom:${piece.replaceAll(':', '\\:')}^0.3"))
    #end
    #foreach ($piece in $negativeAncestors)
      #set ($discard = $data.add("not_symptom:${piece.replaceAll(':', '\\:')}^0.3"))
    #end
    #foreach ($piece in $!request.getParameterValues('free_symptom'))
      #set($discard = $data.add("text:""${piece}"""))
    #end
    #set ($discard = $data.add('-nameSort:\** -nameSort:\+* -nameSort:\^*'))
    #if ("$!{request.format}" == 'html')
#set ($results = $_service.search($stringtool.join($data, ' '), $limit, 0))
#if ($results.size() > 0)
{{html clean="false"  wiki="false"}}##
&lt;ul>
#foreach($item in $results)
    #if ("$!item.id"!= '' &amp;&amp; "$!item.name" != '')
    #set ($indexOfSeparator = $item.name.indexOf(';'))
    #if ($indexOfSeparator > 0)
      #set($shortName = $item.name.substring(0, $indexOfSeparator))
      #set($fullName = $item.name.replaceAll(';;', ';'))
    #else
      #set($shortName = $item.name)
      #set($fullName = $item.name)
    #end
  &lt;li class="disorder">
    &lt;span class="id hidden" title="${item.id}">[MIM:#if("$!item.Oid"!= '')${item.Oid}#else${item.id}#end]&lt;/span>
    &lt;span class="title" title="${fullName}">${shortName}&lt;/span> &lt;span class="hint" style="float: right; font-size: .9em">($mathtool.roundTo(2, $item.score))&lt;/span>
    #if ("$!item.Locus" != '')&lt;span class="locus">(Locus: ${item.Locus})&lt;/span>#end
  &lt;/li>
  #end
#end## foreach item
&lt;/ul>
{{/html}}
   #set ($hasOutput = true)
#else
   #set ($hasOutput = false)
#end## results.size() > 0
    #end## html format
  #else
    #set ($hasOutput = false)
  #end## non-empty query
#end## get action
##
#if (!$hasOutput)
(% class="hint" %)No matches found
#end
{{/velocity}}</content>
</xwikidoc>